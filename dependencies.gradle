ext {
    def gradleVersion = "7.0.4"
    def kotlinGradleVersion = "1.6.10"
    def hiltGradleVersion = "2.40.5"
    def navigationGradleVersion = "2.5.1"
    def appCompatVersion = '1.5.0'
    def materialVersion = "1.6.1"
    def constraintLayoutVersion = "2.1.4"
    def coreKtxVersion = '1.8.0'
    def activityKtx = "1.4.0"
    def lifecycleLivedataKtx = "2.4.0"
    def lifecycleViewModelKtx = "2.4.0"
    def navigationFragmentKtx = "2.5.1"
    def navigationUiKtx = "2.5.1"
    def lifecycleExtensions = "2.2.0"
    def retrofitVersion = "2.9.0"
    def retrofitConverterGsonVersion = "2.9.0"
    def okhttpVersion = '5.0.0-alpha.10'
    def okhttpLoggingInterceptorVersion = '5.0.0-alpha.10'
    def hiltAndroidVersion = '2.43.2'
    def kaptHiltAndroidCompilerVersion = '2.43.2'
    def hiltLifecycleViewModelVersion = "1.0.0-alpha03"
    def kaptHiltCompilerVersion = "1.0.0"
    def kotlinxCoroutinesVersion = '1.6.4'

    def testCore = "2.1.0"
    def testKotlinxCoroutines = '1.6.4'
    def testMockitoCore = '4.7.0'
    def testJunit = "4.13.2"
    def androidTestJunit = "1.1.4-alpha07"
    def androidTestEspressoCore = "3.5.0-alpha07"
    def picassoVersion = "2.5.2"
    def androidTestRunner = "1.4.0"
    def androidTestRules = "1.4.1-alpha07"
    def androidExpressTestIdling = "3.4.0"
    def androidExpressTestCont = "3.5.0-alpha07"
    def unitMockkTesting = "1.9.3"

    classPaths = [
            gradlePath      : "com.android.tools.build:gradle:$gradleVersion",
            kotlinGradlePath: "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinGradleVersion",
            hiltPath        : "com.google.dagger:hilt-android-gradle-plugin:$hiltGradleVersion",
            navigationPath  : "androidx.navigation:navigation-safe-args-gradle-plugin:$navigationGradleVersion"
    ]

    androidx = [
            coreKtx           : "androidx.core:core-ktx:$coreKtxVersion",
            appCompat         : "androidx.appcompat:appcompat:$appCompatVersion",
            constraintlayout  : "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion",
            lifecycleExt      : "androidx.lifecycle:lifecycle-extensions:$lifecycleExtensions",
            lifecycleLiveData : "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleLivedataKtx",
            lifecycleViewModel: "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleViewModelKtx",
            navigationFragment: "androidx.navigation:navigation-fragment-ktx:$navigationFragmentKtx",
            navigationUi      : "androidx.navigation:navigation-ui-ktx:$navigationUiKtx",
            activityKtx       : "androidx.activity:activity-ktx:$activityKtx"
    ]

    google = [
            material: "com.google.android.material:material:$materialVersion"
    ]

    kotlin = [
            kotlinxCoroutines: "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinxCoroutinesVersion"
    ]

    hilt = [
            hiltAndroid            : "com.google.dagger:hilt-android:$hiltAndroidVersion",
            kaptHiltAndroidCompiler: "com.google.dagger:hilt-android-compiler:$kaptHiltAndroidCompilerVersion",
            kaptHiltCompiler       : "androidx.hilt:hilt-compiler:$kaptHiltCompilerVersion",
            hiltViewModel          : "androidx.hilt:hilt-lifecycle-viewmodel:$hiltLifecycleViewModelVersion"
    ]

    network = [
            retrofit                : "com.squareup.retrofit2:retrofit:$retrofitVersion",
            retrofitGsonConverter   : "com.squareup.retrofit2:converter-gson:$retrofitConverterGsonVersion",
            okhttp                  : "com.squareup.okhttp3:okhttp:$okhttpVersion",
            okhttpLoggingInterceptor: "com.squareup.okhttp3:logging-interceptor:$okhttpLoggingInterceptorVersion"
    ]

    testing = [
            unitTestingCore       : "androidx.arch.core:core-testing:$testCore",
            unitTestingCoroutines : "org.jetbrains.kotlinx:kotlinx-coroutines-test:$testKotlinxCoroutines",
            unitTestingMockitoCore: "org.mockito:mockito-core:$testMockitoCore",
            unitTestingJunit      : "junit:junit:$testJunit",
            uiTestingJunit        : "androidx.test.ext:junit:$androidTestJunit",
            uiTestingEspresso     : "androidx.test.espresso:espresso-core:$androidTestEspressoCore",
            uiTestRunner          : "androidx.test:runner:$androidTestRunner",
            uiTestRules           : "androidx.test:rules:$androidTestRules",
            uiTestExpressoIdling  : "androidx.test.espresso:espresso-idling-resource:$androidExpressTestIdling",
            uiTestExpressoIdCont  : "androidx.test.espresso:espresso-contrib:$androidExpressTestCont",
            unitTestingMockk      : "io.mockk:mockk:$unitMockkTesting"
    ]
    others = [
            picasso: "com.squareup.picasso:picasso:$picassoVersion"
    ]
}