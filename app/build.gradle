plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-android'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'androidx.navigation.safeargs.kotlin'
}

apply from: '../dependencies.gradle'

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.app.cocktailapp"
        minSdk 24
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    buildTypes {
        debug {
            minifyEnabled false
            debuggable true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
        dataBinding false
    }
}

kapt {
    correctErrorTypes true
}

dependencies {

    implementation androidx.coreKtx
    implementation androidx.appCompat
    implementation androidx.constraintlayout
    implementation androidx.lifecycleExt
    implementation google.material

    //Coroutines
    implementation kotlin.kotlinxCoroutines

    //DI Hilt
    implementation hilt.hiltAndroid
    kapt hilt.kaptHiltAndroidCompiler
    implementation hilt.hiltViewModel
    kapt hilt.kaptHiltCompiler

    //Network
    implementation network.retrofit
    implementation network.retrofitGsonConverter
    implementation network.okhttp
    implementation network.okhttpLoggingInterceptor

    //Room Database
    implementation androidx.roomDb
    kapt androidx.kaptRoomDb

    // optional - Kotlin Extensions and Coroutines support for Room
    implementation androidx.roomKtx

    //Glide
    implementation others.picasso

    // Navigation
    implementation androidx.navigationFragment
    implementation androidx.navigationUi

    //Activity extension, referring with  "by viewModels"
    implementation androidx.activityKtx

    //Adding Swipe Refresh Layout Dependency
    implementation androidx.swiperefreshlayout

    // LiveData
    implementation androidx.lifecycleLiveData

    // ViewModel
    implementation androidx.lifecycleViewModel

    testImplementation testing.unitTestingCore
    // Coroutine Testing
    testImplementation testing.unitTestingCoroutines
    testImplementation testing.unitTestingMockitoCore

    // optional - Test helpers for LiveData
    testImplementation testing.unitTestingCore
    testImplementation testing.unitTestingMockk
    testImplementation testing.unitTestingJunit

    // espresso & UI Testing
    androidTestImplementation testing.uiTestExpressoIdCont
    androidTestImplementation testing.uiTestingJunit
    androidTestImplementation testing.uiTestingEspresso
    androidTestImplementation testing.uiTestRunner
    androidTestImplementation testing.uiTestRules
    implementation testing.uiTestExpressoIdling
}